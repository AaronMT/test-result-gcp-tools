name: Batch ingest JUnit XML reports from Cloud Storage to ReportPortal

on:
    workflow_dispatch:

env:
   REPORT_PORTAL_API_ENDPOINT: ${{ secrets.REPORT_PORTAL_API_ENDPOINT }}
   REPORT_PORTAL_PROJECT_NAME: ${{ secrets.REPORT_PORTAL_PROJECT_NAME }}
   REPORT_PORTAL_API_TOKEN: ${{ secrets.REPORT_PORTAL_API_TOKEN }}

jobs:
    ingest_reports:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout the repository
              uses: actions/checkout@v4.1.7
            - name: Authenticate with Google Cloud
              uses: google-github-actions/auth@v0.5.0
              with:
                credentials_json: ${{ secrets.GCP_SA_KEY }}
            - name: Set up Google Cloud SDK
              uses: 'google-github-actions/setup-gcloud@v2.1.1'
              with:
                project_id: ${{ secrets.GCP_PROJECT_ID }}
            - name: Install Dependencies
              run: |
                python3 -m pip install junitparser==3.1.2
            - name: Copy JUnit reports from the last 24 hours from GCS
              run: |
                BUCKET_NAME="${{ secrets.GCS_BUCKET_NAME }}"
                DATE_PREFIX=$(date -u +%Y-%m-%d)  # Get the current date in UTC

                mkdir -p junit_reports

                # Find and download the FullJunitXmlReport.xml files from the last 24 hours
                gsutil ls "gs://$BUCKET_NAME/*$DATE_PREFIX*/FullJUnitReport.xml" | while read -r file; do
                  # Extract directory name from the full path
                  DIR_NAME=$(basename $(dirname "$file"))
                  # Define the destination file name with the directory name appended
                  DEST_FILE="./junit_reports/FullJUnitReport-${DIR_NAME}.xml"
                  # Matrix file path
                  MATRIX_FILE="$(dirname "$file")/matrix_ids.json"
                  LOCAL_MATRIX_FILE="./junit_reports/matrix_ids-${DIR_NAME}.json"
                  # Copy matrix_ids.json locally to inspect it
                  gsutil cp "$MATRIX_FILE" "$LOCAL_MATRIX_FILE"

                  if [ -f "$LOCAL_MATRIX_FILE" ]; then
                    MATRIX_LABEL=$(jq -r '.[].clientDetails.matrixLabel' "$LOCAL_MATRIX_FILE")
                    if [ "$MATRIX_LABEL" == "try" ]; then
                      echo "Skipping $file because matrixLabel is 'try'"
                      continue
                    fi
                  fi
                  # Copy the file with the new name to avoid overwriting
                  echo "Copying $file to $DEST_FILE"
                  gsutil -m cp "$file" "$DEST_FILE"
                done
            - name: Inspect and remove empty JUnit XML reports
              run: |
                python3 scripts/src/inspect_reports.py junit_reports
            - name: Archive the reports into a zip file
              run: |
                ZIP_FILE="FullJunitXmlReports_$(date +%Y%m%d_%H%M%S).zip"
                zip -r $ZIP_FILE junit_reports/
                echo "ZIP_FILE=$ZIP_FILE" >> $GITHUB_ENV
            - name: Run ingestion script
              run: |
                  ./scripts/src/ingest_reports.sh
            - name: Upload artifact
              uses: actions/upload-artifact@v4.4.0
              with:
                  name: junit-xml-reports
                  path: ${{ env.ZIP_FILE }}
